AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudWatch monitoring and alerting for DocFlow application'

Parameters:
  Environment:
    Type: String
    Default: production
    Description: Environment name
    
  LoadBalancerFullName:
    Type: String
    Description: Full name of the Application Load Balancer

  SNSTopicArn:
    Type: String
    Description: SNS Topic ARN for alerts (optional)
    Default: ""

  EmailAddress:
    Type: String
    Description: Email address for alert notifications
    Default: ""

Conditions:
  HasSNSTopic: !Not [!Equals [!Ref SNSTopicArn, ""]]
  HasEmail: !Not [!Equals [!Ref EmailAddress, ""]]
  CreateSNSTopic: !And [!Not [!Condition HasSNSTopic], !Condition HasEmail]

Resources:
  # SNS Topic for Alerts
  AlertTopic:
    Type: AWS::SNS::Topic
    Condition: CreateSNSTopic
    Properties:
      TopicName: !Sub '${Environment}-docflow-alerts'
      DisplayName: DocFlow Alerts

  EmailSubscription:
    Type: AWS::SNS::Subscription
    Condition: CreateSNSTopic
    Properties:
      TopicArn: !Ref AlertTopic
      Protocol: email
      Endpoint: !Ref EmailAddress

  # CloudWatch Log Groups
  ApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/ec2/${Environment}-docflow-app'
      RetentionInDays: 14

  NginxLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/ec2/${Environment}-docflow-nginx'
      RetentionInDays: 7

  SystemLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/ec2/${Environment}-docflow-system'
      RetentionInDays: 7

  # Application Load Balancer Alarms
  ALBTargetResponseTimeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-alb-response-time'
      AlarmDescription: 'ALB response time is too high'
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 5.0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref LoadBalancerFullName
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]
      TreatMissingData: breaching

  ALBTargetHealthyHostsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-alb-healthy-hosts'
      AlarmDescription: 'No healthy targets available'
      MetricName: HealthyHostCount
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 60
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref LoadBalancerFullName
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]
      TreatMissingData: breaching

  ALB5XXErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-alb-5xx-errors'
      AlarmDescription: 'High rate of 5XX errors'
      MetricName: HTTPCode_ELB_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref LoadBalancerFullName
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]
      TreatMissingData: notBreaching

  # EC2 Instance Alarms
  HighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-high-cpu'
      AlarmDescription: 'EC2 CPU utilization is too high'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Sub '${Environment}-docflow-asg'
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]

  HighMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-high-memory'
      AlarmDescription: 'EC2 Memory utilization is too high'
      MetricName: MemoryUtilization
      Namespace: CWAgent
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 85
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Sub '${Environment}-docflow-asg'
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]

  HighDiskUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-high-disk'
      AlarmDescription: 'EC2 Disk utilization is too high'
      MetricName: DiskSpaceUtilization
      Namespace: CWAgent
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 90
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Sub '${Environment}-docflow-asg'
        - Name: Filesystem
          Value: '/'
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]

  # RDS Database Alarms
  RDSCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-rds-cpu'
      AlarmDescription: 'RDS CPU utilization is too high'
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Sub '${Environment}-docflow-postgres'
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]

  RDSConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-rds-connections'
      AlarmDescription: 'RDS connection count is too high'
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Sub '${Environment}-docflow-postgres'
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]

  RDSFreeStorageSpaceAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-rds-storage'
      AlarmDescription: 'RDS free storage space is too low'
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 2000000000  # 2 GB in bytes
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Sub '${Environment}-docflow-postgres'
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]

  # Custom Application Metrics
  ApplicationErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-docflow-app-errors'
      AlarmDescription: 'High rate of application errors'
      MetricName: ApplicationErrors
      Namespace: DocFlow/Application
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      DatapointsToAlarm: 1
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]
      TreatMissingData: notBreaching

  # Log-based Metrics
  ErrorLogMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ApplicationLogGroup
      FilterPattern: '[timestamp, requestId, level="ERROR", ...]'
      MetricTransformations:
        - MetricNamespace: DocFlow/Application
          MetricName: ApplicationErrors
          MetricValue: '1'
          DefaultValue: 0

  # CloudWatch Dashboard
  DocFlowDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${Environment}-docflow-monitoring'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "${LoadBalancerFullName}" ],
                  [ ".", "TargetResponseTime", ".", "." ],
                  [ ".", "HTTPCode_Target_2XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_4XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_5XX_Count", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Application Load Balancer Metrics",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/EC2", "CPUUtilization", "AutoScalingGroupName", "${Environment}-docflow-asg" ],
                  [ "CWAgent", "MemoryUtilization", ".", "." ],
                  [ ".", "DiskSpaceUtilization", ".", ".", "Filesystem", "/" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "EC2 Resource Utilization",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBInstanceIdentifier", "${Environment}-docflow-postgres" ],
                  [ ".", "DatabaseConnections", ".", "." ],
                  [ ".", "ReadLatency", ".", "." ],
                  [ ".", "WriteLatency", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "RDS Database Metrics",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "DocFlow/Application", "ApplicationErrors" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Application Errors",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 12,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/ec2/${Environment}-docflow-app'\n| fields @timestamp, @message\n| filter @message like /ERROR/\n| sort @timestamp desc\n| limit 20\n",
                "region": "${AWS::Region}",
                "title": "Recent Application Errors",
                "view": "table"
              }
            }
          ]
        }

Outputs:
  DashboardURL:
    Description: CloudWatch Dashboard URL
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${Environment}-docflow-monitoring'

  AlertTopicArn:
    Description: SNS Topic ARN for alerts
    Value: !If [CreateSNSTopic, !Ref AlertTopic, !Ref SNSTopicArn]
    Condition: CreateSNSTopic