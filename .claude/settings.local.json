{
  "permissions": {
    "allow": [
      "Bash(pnpm db:generate:*)",
      "Bash(pnpm db:push:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(pnpm docflow:init:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm dev:*)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(pnpm build:*)",
      "Bash(docker run:*)",
      "Bash(docker container:*)",
      "Bash(docker start:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(mv:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(curl:*)",
      "Bash(PORT=3002 pnpm dev)",
      "Bash(HOSTNAME=0.0.0.0 pnpm dev)",
      "Bash(PORT=3001 pnpm dev)",
      "Bash(open:*)",
      "Bash(pnpm next:*)",
      "Bash(node:*)",
      "Bash(rm:*)",
      "Bash(pnpm db:seed-roles:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(pnpm remove:*)",
      "Bash(npm ls:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm why:*)",
      "Bash(psql:*)",
      "Bash(pnpm start:*)",
      "Bash(docker compose exec:*)",
      "Bash(redis-cli:*)",
      "Bash(npx tsc:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "WebFetch(domain:ui.shadcn.com)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(ls:*)",
      "Bash(docker ps:*)",
      "Bash(docker port:*)",
      "Bash(docker:*)",
      "Bash(sudo pkill:*)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(git reset:*)",
      "Bash(git restore:*)",
      "Bash(git branch:*)",
      "Bash(rg:*)",
      "Bash(npm run build:*)",
      "Bash(/dev/null)",
      "Bash(git checkout:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/docflow_db\" pnpm db:push)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE documents ADD COLUMN doc_received_date date;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT id, mt_number, doc_received_date FROM documents ORDER BY id DESC LIMIT 5;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT id, mt_number, doc_received_date FROM documents WHERE mt_number = ''55210-5/444'';\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE documents ADD COLUMN additional_docs_count integer DEFAULT 0;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE documents ADD COLUMN additional_docs text[];\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE additional_document_files ADD COLUMN IF NOT EXISTS is_verified boolean DEFAULT false;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE additional_document_files ADD COLUMN IF NOT EXISTS verified_by integer REFERENCES users(id);\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE additional_document_files ADD COLUMN IF NOT EXISTS verified_at timestamp;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"\\d additional_document_files\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE additional_document_files ALTER COLUMN is_verified DROP DEFAULT;\")",
      "Bash(xargs kill:*)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE additional_document_files ADD COLUMN IF NOT EXISTS verification_comment text;\")",
      "Bash(npx tsx:*)",
      "Bash(./scripts/test-reset-dry-run.sh:*)",
      "Bash(./scripts/test-reset-simple.sh:*)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT baCode, name FROM branches ORDER BY baCode;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT ba_code, name FROM branches ORDER BY ba_code;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE branches ADD COLUMN department_name VARCHAR(255);\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE branches ADD CONSTRAINT branches_ba_dept_unique UNIQUE (ba_code, department_name);\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"\nINSERT INTO branches (ba_code, branch_code, name, department_name, region_id, region_code, is_active) VALUES\n(1059, 105901, ''กปภ.เขต 6 - งานพัสดุ'', ''งานพัสดุ'', 6, ''R6'', true),\n(1059, 105902, ''กปภ.เขต 6 - งานธุรการ'', ''งานธุรการ'', 6, ''R6'', true),\n(1059, 105903, ''กปภ.เขต 6 - งานบัญชีเจ้าหนี้'', ''งานบัญชีเจ้าหนี้'', 6, ''R6'', true),\n(1059, 105904, ''กปภ.เขต 6 - งานการเงิน'', ''งานการเงิน'', 6, ''R6'', true),\n(1059, 105905, ''กปภ.เขต 6 - งานบุคคล'', ''งานบุคคล'', 6, ''R6'', true);\n\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"\\d branches\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE branches DROP CONSTRAINT branches_ba_code_key;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT ba_code, branch_code, name, department_name FROM branches WHERE ba_code >= 105901 ORDER BY ba_code;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT ba_code, name, department_name FROM branches WHERE ba_code BETWEEN 105901 AND 105905 ORDER BY ba_code;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"\n-- Clean up test data\nDELETE FROM branches WHERE ba_code IN (105910, 105911);\n\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -f test-branch-integration.sql)",
      "Bash(printf \"\\n\")",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/docflow_db\" npx drizzle-kit push)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE documents ADD COLUMN IF NOT EXISTS send_back_original_document boolean DEFAULT false;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE documents ADD COLUMN IF NOT EXISTS send_back_date date;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"ALTER TABLE documents ADD COLUMN IF NOT EXISTS deadline_date date;\")",
      "Bash(env)",
      "Bash(timeout:*)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT id, document_id, item_index, item_name, original_filename FROM additional_document_files WHERE document_id = 3;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"DELETE FROM additional_document_files WHERE document_id = 3 AND item_index = 0;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT id, mt_number, subject, status, created_at FROM documents WHERE mt_number = ''55210-5/991'';\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d docflow_db -c \"SELECT id, document_id, item_index, item_name, original_filename FROM additional_document_files WHERE document_id = 4;\")"
    ],
    "deny": []
  }
}